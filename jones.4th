
: '('  ( "quoted_open" ) LIT \'0x00000028 ;
: ')'  ( "quoted_close" ) LIT \'0x00000029 ;
: \(  ( "openBracket" ) IMMEDIATE 
	LIT \'0x00000001 
	KEY 
	DUP 
	'(' 
	= 
	0BRANCH \'0x00000014 
	DROP 
	1+ 
	BRANCH 
	\'0x00000018 
	')' 
	= 
	0BRANCH \'0x00000008 
	1- 
	DUP 
	0= 
	0BRANCH 
	\'0xFFFFFFB8 
	DROP 
	;
: C>D ( "CtoD" ) LIT \'0x00000000 SWAP ;
: / ( "newdiv" ) /MOD SWAP DROP ;
: MOD ( "MOD" ) /MOD DROP ;
: '\n' ( "quoted_slash_n" ) LIT \'0x0000000A ;
: BL ( "BL" ) LIT \'0x00000020 ;
: CR ( "CR" ) '\n' EMIT ;
: SPACE ( "SPACE" ) BL EMIT ;
: NEGATE ( "NEGATE" ) LIT \'0x00000000 SWAP - ;
: TRUE ( "TRUE" ) LIT \'0x00000001 ;
: FALSE ( "FALSE" ) LIT \'0x00000000 ;
: NOT ( "NOT" ) 0= ;
: LITERAL ( "LITERAL" ) IMMEDIATE ' LIT \'0x0804DD0E , ;
: ':' ( "quoted_colon" ) LIT \'0x0000003A ;
: ';' ( "quoted_semicolon" ) LIT \'0x0000003B ;
: '"' ( "quoted_quote" ) LIT \'0x00000022 ;
: 'A' ( "quoted_A" ) LIT \'0x00000041 ;
: '0' ( "quoted_0" ) LIT \'0x00000030 ;
: '-' ( "quoted_minus" ) LIT \'0x0000002D ;
: '.' ( "quoted_dot" ) LIT \'0x0000002E ;
: '<' ( "quoted_less" ) LIT \'0x0000003C ;
: '>' ( "quoted_more" ) LIT \'0x0000003E ;
: '|' ( "quoted_pipe" ) LIT \'0x0000007C ;
: [COMPILE] ( "COMPILE_in_brackets" ) IMMEDIATE WORD FIND >CFA , ;
: RECURSE ( "RECURSE" ) IMMEDIATE LAST D@ >CFA , ;
: AGAIN ( "AGAIN" ) IMMEDIATE ' BRANCH \'0x0804DD0E HERE D@ -D , ;
: UNLESS ( "UNLESS" ) IMMEDIATE ' NOT , IF ;
: NIP ( "NIP" ) SWAP DROP ;
: NIP2 ( "NIP2" ) SWAP2 DROP2 ;
: TUCK ( "TUCK" ) SWAP OVER ;
: PICK ( "PICK" ) LIT \'0x00000003 + LIT \'0x00000002 * C>D S? SWAP2 -D @ ;
: SPACES ( "SPACES" ) DUP 0> 0BRANCH \'0x00000014 SPACE 1- BRANCH \'0xFFFFFFE4 DROP ;
: DECIMAL ( "newDECIMAL" ) LIT \'0x0000000A BASE ! ;
: HEX ( "newHEX" ) LIT \'0x00000010 BASE ! ;
: U. ( "Udot" ) BASE @ /MOD ?DUP 0BRANCH \'0x00000008 U. DUP LIT \'0x0000000A < 0BRANCH \'0x00000010 '0' BRANCH \'0x00000014 LIT \'0x0000000A - 'A' + EMIT ;
: .S ( "dotS" ) S? BASE C@ SWAP21 hex DUP2 S0 >D 0BRANCH \'0x0000003C LIT \'0x00000000 LIT \'0x00000002 -D DUP2 @ '<' EMIT U. '>' EMIT BRANCH \'0xFFFFFFB8 DROP2 '|' EMIT SPACE BASE C! ;
: UWIDTH ( "UWIDTH" ) BASE @ / ?DUP 0BRANCH \'0x00000014 UWIDTH 1+ BRANCH \'0x0000000C LIT \'0x00000001 ;
: U.R ( "UdotR" ) SWAP DUP UWIDTH ROT SWAP - SPACES U. ;
: .R ( "dotR" ) SWAP DUP 0< 0BRANCH \'0x00000024 NEGATE LIT \'0x00000001 SWAP ROT 1- BRANCH \'0x00000014 LIT \'0x00000000 SWAP ROT SWAP DUP UWIDTH ROT SWAP - SPACES SWAP 0BRANCH \'0x0000000C '-' EMIT U. ;
: .. ( "dotdot" ) LIT \'0x00000000 .R SPACE ;
: U. ( "Udotredef" ) U. SPACE ;
: ? ( "question" ) @ . ;
: WITHIN ( "WITHIN" ) -ROT OVER <= 0BRANCH \'0x00000028 > 0BRANCH \'0x00000010 TRUE BRANCH \'0x00000008 FALSE BRANCH \'0x0000000C DROP2 FALSE ;
: DEPTH ( "DEPTH" ) S? S0 -D LIT \'0x00000002 C>D -D SWAP DROP /2 ;
: ALIGNED ( "ALIGNED" ) LIT \'0x00000000 LIT \'0x00000003 +D LIT \'0x00000003 INVERT AND ;
: ALIGN ( "ALIGN" ) HERE D@ ALIGNED HERE D! ;
: C, ( "Ccomma" ) HERE D@ C! HERE D@ LIT \'0x00000001 +21 HERE D! ;
: S" ( "Squote" ) IMMEDIATE STATE C@ 0BRANCH \'0x0000007C ' LITSTRING , HERE D@ LIT \'0x00000000 LIT \'0x00000000 , KEY DUP '"' <> 0BRANCH \'0x00000010 C, BRANCH \'0xFFFFFFE0 DROP DUP2 HERE D@ SWAP2 -D 4D- SWAP2 D! BRANCH \'0x0000005C HERE D@ KEY DUP '"' <> 0BRANCH \'0x00000018 OVER21 C! 1D+ BRANCH \'0xFFFFFFD8 DROP HERE D@ -D HERE D@ SWAP2 SWAP DROP ;
: ." ( "dotquote" ) IMMEDIATE STATE C@ 0BRANCH \'0x0000001C S" ' TELL , BRANCH \'0x00000030 KEY DUP '"' = 0BRANCH \'0x0000000C DROP ;
: CONSTANT ( "CONSTANT" ) WORD CREATE DOCOL , ' LIT \'0x0804DD0E C>D , ' ;
: CONSTANT2 ( "CONSTANT2" ) WORD CREATE DOCOL , ' LIT \'0x0804DD0E , ' ;
: ALLOT ( "ALLOT" ) HERE D@ SWAP12 HERE +! ;
: CELLS ( "CELLS" ) LIT \'0x00000002 * ;
: VARIABLE ( "VARIABLE" ) LIT \'0x00000002 CELLS ALLOT WORD CREATE DOCOL , ' LIT2 \'0x0804DD0E , ' ;
: VALUE ( "VALUE" ) WORD CREATE DOCOL , ' LIT \'0x0804DD0E C>D , ' ;
: VALUE2 ( "VALUE2" ) WORD CREATE DOCOL , ' LIT2 \'0x0804DD0E , ' ;
: TO ( "TO" ) IMMEDIATE WORD FIND >DFA 4+ STATE C@ 0BRANCH \'0x0000002C ' LIT \'0x0804DD0E C>D , ' D! , BRANCH \'0x00000008 ! ;
: TO2 ( "TO2" ) IMMEDIATE WORD FIND >DFA 4+ STATE C@ 0BRANCH \'0x00000028 ' LIT2 \'0x0804DD0E , ' D! , BRANCH \'0x00000008 D! ;
: +TO ( "plusTO" ) IMMEDIATE WORD FIND >DFA 4+ STATE C@ 0BRANCH \'0x0000002C ' LIT \'0x0804DD0E C>D , ' +! , BRANCH \'0x00000008 +! ;
: +TO2 ( "plusTO2" ) IMMEDIATE WORD FIND >DFA 4+ STATE C@ 0BRANCH \'0x00000028 ' LIT \'0x0804DD0E , ' +!D , BRANCH \'0x00000008 +!D ;
: ID. ( "IDdot" ) 4D+ 1D+ DUP2 C@ DUP 0> 0BRANCH \'0x00000028 SWAP21 1+ DUP2 C@ EMIT SWAP12 1- BRANCH \'0xFFFFFFD0 DROP DROP2 ;
: ?HIDDEN ( "qHIDDEN" ) 4+ C@ F_HIDDEN AND ;
: ?IMMEDIATE ( "qIMMEDIATE" ) 4+ C@ F_IMMEDIATE AND ;
: WORDS ( "WORDS" ) LAST D@ ?DUP2 NOTNULL 0BRANCH \'0x00000030 DUP2 ?HIDDEN NOT 0BRANCH \'0x00000010 DUP2 ID. SPACE D@ BRANCH \'0xFFFFFFC8 CR ;
: FORGET ( "newFORGET" ) WORD FIND DUP2 ISNULL 0BRANCH \'0x0000000C DROP2 RETURN DUP2 D@ LAST D! HERE D! ;
: DUMP ( "DUMP" ) BASE C@ -ROT4 HEX ?DUP 0BRANCH \'0x00000138 OVER21 SWAP LIT \'0x00000004 U.R LIT \'0x00000004 U.R SPACE DUP3 1- LIT \'0x0000000F AND 1+ ?DUP 0BRANCH \'0x00000034 SWAP21 DUP2 C@ LIT \'0x00000002 .R SPACE 1+ SWAP12 1- BRANCH \'0xFFFFFFC8 DROP2 DUP3 1- LIT \'0x0000000F AND 1+ ?DUP 0BRANCH \'0x0000005C SWAP21 DUP2 C@ DUP LIT \'0x00000020 LIT \'0x00000080 WITHIN 0BRANCH \'0x00000010 EMIT BRANCH \'0x00000010 DROP '.' EMIT 1+ SWAP12 1- BRANCH \'0xFFFFFFA0 DROP2 CR DUP 1- LIT \'0x0000000F AND 1+ TUCK - >R +21 R> BRANCH \'0xFFFFFEC4 DROP2 BASE C! ;
: CASE ( "CASE" ) IMMEDIATE LIT \'0x00000000 ;
: OF ( "OF" ) IMMEDIATE ' OVER , ' = , IF ' DROP , ;
: ENDOF ( "ENDOF" ) IMMEDIATE ELSE ;
: ENDCASE ( "ENDCASE" ) IMMEDIATE ' DROP , ?DUP 0BRANCH \'0x00000010 THEN BRANCH \'0xFFFFFFEC ;
: CASE2 ( "CASE2" ) IMMEDIATE LIT \'0x00000000 LIT \'0x00000000 ;
: OF2 ( "OF2" ) IMMEDIATE ' OVER2 , ' =D , IF ' DROP2 , ;
: ENDCASE2 ( "ENDCASE2" ) IMMEDIATE ' DROP2 , ?DUP2 NOTNULL 0BRANCH \'0x00000010 THEN BRANCH \'0xFFFFFFE8 ;
: CFA> ( "CFAto" ) LAST D@ ?DUP2 NOTNULL 0BRANCH \'0x0000002C DUP4 SWAP2 <D 0BRANCH \'0x0000000C NIP2 ;
: :NONAME ( "colonNONAME" ) LIT \'0x00000000 LIT \'0x00000000 CREATE HERE D@ DOCOL , ] ;
: ['] ( "bracketedapostrophe" ) IMMEDIATE ' LIT \'0x0804DD0E ;
: EXCEPTION-MARKER ( "EXCEPTION_MARKER" ) RDROP LIT \'0x00000000 ;
: CATCH ( "CATCH" ) S? 4+ >R ' EXCEPTION-MARKER 4+ >R EXECUTE ;
: THROW ( "THROW" ) ?DUP 0BRANCH \'0x000000EE R? DUP R0 4- < 0BRANCH \'0x00000060 DUP @ ' EXCEPTION-MARKER 4+ = 0BRANCH \'0x00000034 4+ R! DUP DUP DUP R> 4- SWAP OVER ! S! ;
: ABORT ( "ABORT" ) LIT \'0x00000000 1- THROW ;
: PRINT-STACK-TRACE ( "PRINT_STACK_TRACE" ) R? DUP R0 4- < 0BRANCH \'0x000000B6 DUP @ ' EXCEPTION-MARKER 4+ OVER = 0BRANCH \'0x00000046 
	DROP 
	LITSTRING \'0x0000000C \"CATCH ( DSP=" 4+ DUP @ U. LITSTRING \'0x00000002 \") " 
	BRANCH \'0x00000044 DUP CFA> ?DUP 0BRANCH \'0x0000002C DUP2 ID. LIT \'0x0000002B EMIT SWAP >DFA 4+ - . DROP 4+ BRANCH \'0xFFFFFF3A DROP CR ;
: Z" ( "Zquote" ) IMMEDIATE STATE C@ 0BRANCH \'0x000000C0 ' LITSTRING , HERE D@ LIT \'0x00000000 , KEY DUP '"' <> 0BRANCH \'0x00000028 HERE D@ C! LIT \'0x00000001 HERE +! BRANCH \'0xFFFFFFC8 LIT \'0x00000000 HERE D@ C! LIT \'0x00000001 HERE +! DROP DUP HERE D@ SWAP - 4- SWAP ! ALIGN ' DROP , BRANCH \'0x00000054 HERE D@ KEY DUP '"' <> 0BRANCH \'0x00000018 OVER C! 1+ BRANCH \'0xFFFFFFD8 DROP LIT \'0x00000000 SWAP C! HERE D@ ;
: STRLEN ( "STRLEN" ) DUP DUP C@ 0<> 0BRANCH \'0x00000010 1+ BRANCH \'0xFFFFFFE4 SWAP - ;
: CSTRING ( "CSTRING" ) SWAP OVER HERE D@ SWAP CMOVE HERE D@ + LIT \'0x00000000 SWAP C! HERE D@ ;

: SEE ( "SEE" ) 
	WORD FIND 
	HERE D@ 
	LAST D@ 
	( BEGIN )
		LIT \'0x00000005 PICK LIT \'0x00000005 PICK 
		OVER2 <>D 
	( WHILE )
		0BRANCH \'0x00000018 
		NIP2 DUP2 D@ 
	( REPEAT ) 
	 BRANCH \'0xFFFFFFC8 
	 DROP2 SWAP2 
	 ':' EMIT SPACE DUP2 ID. SPACE 
	 DUP2 ?IMMEDIATE ( IF ) 0BRANCH \'0x0000001A LITSTRING \'0x0000000A \"IMMEDIATE " ( FI )
	 >DFA 
	 ( BEGIN ) 
		OVER2 OVER2 >D
	( WHILE ) 0BRANCH \'0x0000031C 
		DUP2 D@ 
		( CASE )
		' LIT \'0x0804DFC8 =D 0BRANCH \'0x00000034 DROP2 LIT \'0x00000000 LIT \'0x00000004 +D DUP2 @ . SPACE BRANCH \'0x000002B0 ' LIT2 \'0x0804DFC8 =D 0BRANCH \'0x00000040 DROP2 LIT \'0x00000000 LIT \'0x00000004 +D DUP2 D@ SWAP . SPACE . SPACE BRANCH \'0x0000025C ' LITSTRING 
		OVER2 =D 0BRANCH \'0x00000090 DROP2 LIT \'0x00000053 EMIT '"' EMIT SPACE LIT \'0x00000000 LIT \'0x00000004 +D DUP2 C@ SWAP21 LIT \'0x00000000 LIT \'0x00000004 +D SWAP12 OVER21 OVER12 TELL '"' EMIT SPACE +21 LIT \'0x00000000 LIT \'0x00000004 -D BRANCH \'0x000001B8 ' 0BRANCH \'0x0804DFC8 =D 0BRANCH \'0x00000060 DROP2 LITSTRING \'0x0000000A \"0BRANCH ( " LIT \'0x00000000 LIT \'0x00000004 +D DUP2 D@ SWAP . SPACE . LITSTRING \'0x00000002 \") " BRANCH \'0x00000144 ' BRANCH \'0x0804DFC8 =D 0BRANCH \'0x0000005F DROP2 LITSTRING \'0x00000009 \"BRANCH ( " LIT \'0x00000000 LIT \'0x00000004 +D DUP2 D@ SWAP . SPACE . LITSTRING \'0x00000002 \") " BRANCH \'0x000000D1 ' ' OVER2 =D 0BRANCH \'0x00000048 DROP2 LIT \'0x00000027 EMIT SPACE LIT \'0x00000000 LIT \'0x00000004 +D DUP2 D@ CFA> ID. SPACE BRANCH \'0x00000075 ' ;

: SEE ( "SEE2" ) 
	WORD FIND HERE D@ LAST D@ LIT \'0x00000005 PICK LIT \'0x00000005 PICK OVER2 <>D 0BRANCH \'0x00000018 NIP2 DUP2 D@ BRANCH \'0xFFFFFFC8 DROP2 SWAP2 ':' EMIT SPACE DUP2 ID. SPACE DUP2 ?IMMEDIATE 0BRANCH \'0x0000001A LITSTRING \'0x0000000A \"IMMEDIATE " >DFA OVER2 OVER2 >D 0BRANCH \'0x0000031C DUP2 D@ ' LIT \'0x0804E068 =D 0BRANCH \'0x00000034 DROP2 LIT \'0x00000000 LIT \'0x00000004 +D DUP2 @ . SPACE BRANCH \'0x000002B0 ' LIT2 \'0x0804E068 =D 0BRANCH \'0x00000040 DROP2 LIT \'0x00000000 LIT \'0x00000004 +D DUP2 D@ SWAP . SPACE . SPACE BRANCH \'0x0000025C ' LITSTRING OVER2 =D 0BRANCH \'0x00000090 DROP2 LIT \'0x00000053 EMIT '"' EMIT SPACE LIT \'0x00000000 LIT \'0x00000004 +D DUP2 C@ SWAP21 LIT \'0x00000000 LIT \'0x00000004 +D SWAP12 OVER21 OVER12 TELL '"' EMIT SPACE +21 LIT \'0x00000000 LIT \'0x00000004 -D BRANCH \'0x000001B8 ' 0BRANCH \'0x0804E068 =D 0BRANCH \'0x00000060 DROP2 LITSTRING \'0x0000000A \"0BRANCH ( " LIT \'0x00000000 LIT \'0x00000004 +D DUP2 D@ SWAP . SPACE . LITSTRING \'0x00000002 \") " BRANCH \'0x00000144 ' BRANCH \'0x0804E068 =D 0BRANCH \'0x0000005F DROP2 LITSTRING \'0x00000009 \"BRANCH ( " LIT \'0x00000000 LIT \'0x00000004 +D DUP2 D@ SWAP . SPACE . LITSTRING \'0x00000002 \") " BRANCH \'0x000000D1 ' ' OVER2 =D 0BRANCH \'0x00000048 DROP2 LIT \'0x00000027 EMIT SPACE LIT \'0x00000000 LIT \'0x00000004 +D DUP2 D@ CFA> ID. SPACE BRANCH \'0x00000075 ' ;
