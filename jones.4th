: C>D LIT \'0x00000000 SWAP ;
: / /MOD SWAP DROP ;
: MOD /MOD DROP ;
: '\n' LIT \'0x0000000A ;
: BL LIT \'0x00000020 ;
: CR '\n' EMIT ;
: SPACE BL EMIT ;
: NEGATE LIT \'0x00000000 SWAP - ;
: TRUE LIT \'0x00000001 ;
: FALSE LIT \'0x00000000 ;
: NOT 0= ;
: LITERAL IMMEDIATE ' LIT , , ;
: ':' LIT \'0x0000003A ;
: ';' LIT \'0x0000003B ;
: '(' LIT \'0x00000028 ;
: ')' LIT \'0x00000029 ;
: '"' LIT \'0x00000022 ;
: 'A' LIT \'0x00000041 ;
: '0' LIT \'0x00000030 ;
: '-' LIT \'0x0000002D ;
: '.' LIT \'0x0000002E ;
: '<' LIT \'0x0000003C ;
: '>' LIT \'0x0000003E ;
: '|' LIT \'0x0000007C ;
: [COMPILE] IMMEDIATE WORD FIND >CFA , ;
: RECURSE IMMEDIATE LAST D@ >CFA , ;
: AGAIN IMMEDIATE ' BRANCH , HERE D@ -D , ;
: UNLESS IMMEDIATE ' NOT , IF ;
: (( IMMEDIATE LIT \'0x00000001 KEY DUP '(' = 0BRANCH \'0x00000014 DROP 1+ BRANCH \'0x00000018 ')' = 0BRANCH \'0x00000008 1- DUP 0= 0BRANCH \'0xFFFFFFB8 DROP ;
: NIP SWAP DROP ;
: NIP2 SWAP2 DROP2 ;
: TUCK SWAP OVER ;
: PICK LIT \'0x00000003 + LIT \'0x00000002 * C>D S? SWAP2 -D @ ;
: SPACES DUP 0> 0BRANCH \'0x00000014 SPACE 1- BRANCH \'0xFFFFFFE4 DROP ;
: DECIMAL LIT \'0x0000000A BASE ! ;
: HEX LIT \'0x00000010 BASE ! ;
: U.. BASE @ /MOD ?DUP 0BRANCH \'0x00000008 U.. DUP LIT \'0x0000000A < 0BRANCH \'0x00000010 '0' BRANCH \'0x00000014 LIT \'0x0000000A - 'A' + EMIT ;
: .S S? BASE C@ SWAP21 hex DUP2 S0 >D 0BRANCH \'0x0000003C LIT \'0x00000000 LIT \'0x00000002 -D DUP2 @ '<' EMIT U.. '>' EMIT BRANCH \'0xFFFFFFB8 DROP2 '|' EMIT SPACE BASE C! ;
: UWIDTH BASE @ / ?DUP 0BRANCH \'0x00000014 UWIDTH 1+ BRANCH \'0x0000000C LIT \'0x00000001 ;
: U.R SWAP DUP UWIDTH ROT SWAP - SPACES U.. ;
: .R SWAP DUP 0< 0BRANCH \'0x00000024 NEGATE LIT \'0x00000001 SWAP ROT 1- BRANCH \'0x00000014 LIT \'0x00000000 SWAP ROT SWAP DUP UWIDTH ROT SWAP - SPACES SWAP 0BRANCH \'0x0000000C '-' EMIT U.. ;
: .. LIT \'0x00000000 .R SPACE ;
: U. U.. SPACE ;
: ? @ . ;
: WITHIN -ROT OVER <= 0BRANCH \'0x00000028 > 0BRANCH \'0x00000010 TRUE BRANCH \'0x00000008 FALSE BRANCH \'0x0000000C DROP2 FALSE ;
: DEPTH S? S0 -D LIT \'0x00000002 C>D -D SWAP DROP /2 ;
: ALIGNED LIT \'0x00000000 LIT \'0x00000003 +D LIT \'0x00000003 INVERT AND ;
: ALIGN HERE D@ ALIGNED HERE D! ;
: C, HERE D@ C! HERE D@ LIT \'0x00000001 +21 HERE D! ;
: S" IMMEDIATE STATE C@ 0BRANCH \'0x0000007C ' LITSTRING , HERE D@ LIT \'0x00000000 LIT \'0x00000000 , KEY DUP '"' <> 0BRANCH \'0x00000010 C, BRANCH \'0xFFFFFFE0 DROP DUP2 HERE D@ SWAP2 -D 4D- SWAP2 D! BRANCH \'0x0000005C HERE D@ KEY DUP '"' <> 0BRANCH \'0x00000018 OVER21 C! 1D+ BRANCH \'0xFFFFFFD8 DROP HERE D@ -D HERE D@ SWAP2 SWAP DROP ;
: ." IMMEDIATE STATE C@ 0BRANCH \'0x0000001C S" ' TELL , BRANCH \'0x00000030 KEY DUP '"' = 0BRANCH \'0x0000000C DROP ;
: CONSTANT WORD CREATE DOCOL , ' LIT , C>D , ' ;
: CONSTANT2 WORD CREATE DOCOL , ' LIT , , ' ;
: ALLOT HERE D@ SWAP12 HERE +! ;
: CELLS LIT \'0x00000002 * ;
: VARIABLE LIT \'0x00000002 CELLS ALLOT WORD CREATE DOCOL , ' LIT2 , , ' ;
: VALUE WORD CREATE DOCOL , ' LIT , C>D , ' ;
: VALUE2 WORD CREATE DOCOL , ' LIT2 , , ' ;
: TO IMMEDIATE WORD FIND >DFA 4+ STATE C@ 0BRANCH \'0x0000002C ' LIT , C>D , ' D! , BRANCH \'0x00000008 ! ;
: TO2 IMMEDIATE WORD FIND >DFA 4+ STATE C@ 0BRANCH \'0x00000028 ' LIT2 , , ' D! , BRANCH \'0x00000008 D! ;
: +TO IMMEDIATE WORD FIND >DFA 4+ STATE C@ 0BRANCH \'0x0000002C ' LIT , C>D , ' +! , BRANCH \'0x00000008 +! ;
: +TO2 IMMEDIATE WORD FIND >DFA 4+ STATE C@ 0BRANCH \'0x00000028 ' LIT , , ' +!D , BRANCH \'0x00000008 +!D ;
: ID. 4D+ 1D+ DUP2 C@ DUP 0> 0BRANCH \'0x00000028 SWAP21 1+ DUP2 C@ EMIT SWAP12 1- BRANCH \'0xFFFFFFD0 DROP DROP2 ;
: ?HIDDEN 4+ C@ F_HIDDEN AND ;
: ?IMMEDIATE 4+ C@ F_IMMEDIATE AND ;
: WORDS LAST D@ ?DUP2 NOTNULL 0BRANCH \'0x00000030 DUP2 ?HIDDEN NOT 0BRANCH \'0x00000010 DUP2 ID. SPACE D@ BRANCH \'0xFFFFFFC8 CR ;
: FORGET WORD FIND DUP2 ISNULL 0BRANCH \'0x0000000C DROP2 RETURN DUP2 D@ LAST D! HERE D! ;
: DUMP BASE C@ -ROT4 HEX ?DUP 0BRANCH \'0x00000138 OVER21 SWAP LIT \'0x00000004 U.R LIT \'0x00000004 U.R SPACE DUP3 1- LIT \'0x0000000F AND 1+ ?DUP 0BRANCH \'0x00000034 SWAP21 DUP2 C@ LIT \'0x00000002 .R SPACE 1+ SWAP12 1- BRANCH \'0xFFFFFFC8 DROP2 DUP3 1- LIT \'0x0000000F AND 1+ ?DUP 0BRANCH \'0x0000005C SWAP21 DUP2 C@ DUP LIT \'0x00000020 LIT \'0x00000080 WITHIN 0BRANCH \'0x00000010 EMIT BRANCH \'0x00000010 DROP '.' EMIT 1+ SWAP12 1- BRANCH \'0xFFFFFFA0 DROP2 CR DUP 1- LIT \'0x0000000F AND 1+ TUCK - >R +21 R> BRANCH \'0xFFFFFEC4 DROP2 BASE C! ;
: CASE IMMEDIATE LIT \'0x00000000 ;
: OF IMMEDIATE ' OVER , ' = , IF ' DROP , ;
: ENDOF IMMEDIATE ELSE ;
: ENDCASE IMMEDIATE ' DROP , ?DUP 0BRANCH \'0x00000010 THEN BRANCH \'0xFFFFFFEC ;
: CASE2 IMMEDIATE LIT \'0x00000000 LIT \'0x00000000 ;
: OF2 IMMEDIATE ' OVER2 , ' =D , IF ' DROP2 , ;
: ENDCASE2 IMMEDIATE ' DROP2 , ?DUP2 NOTNULL 0BRANCH \'0x00000010 THEN BRANCH \'0xFFFFFFE8 ;
: CFA> LAST D@ ?DUP2 NOTNULL 0BRANCH \'0x0000002C DUP4 SWAP2 <D 0BRANCH \'0x0000000C NIP2 ;
: SEE WORD FIND 
	HERE D@ LAST D@ LIT \'0x00000005 PICK LIT \'0x00000005 PICK OVER2 <>D 0BRANCH \'0x00000018 NIP2 DUP2 D@ BRANCH \'0xFFFFFFC8 DROP2 SWAP2 ':' EMIT SPACE DUP2 ID. SPACE DUP2 ?IMMEDIATE 0BRANCH \'0x0000001A LITSTRING \'0x0000000A \"IMMEDIATE " >DFA OVER2 OVER2 >D 0BRANCH \'0x0000031C DUP2 D@ ' LIT OVER2 =D 0BRANCH \'0x00000034 DROP2 LIT \'0x00000000 LIT \'0x00000004 +D DUP2 @ . SPACE BRANCH \'0x000002B0 ' LIT2 OVER2 =D 0BRANCH \'0x00000040 DROP2 LIT \'0x00000000 LIT \'0x00000004 +D DUP2 D@ SWAP . SPACE . SPACE BRANCH \'0x0000025C ' LITSTRING OVER2 =D 0BRANCH \'0x00000090 DROP2 LIT \'0x00000053 EMIT '"' EMIT SPACE LIT \'0x00000000 LIT \'0x00000004 +D DUP2 C@ SWAP21 LIT \'0x00000000 LIT \'0x00000004 +D SWAP12 OVER21 OVER12 TELL '"' EMIT SPACE +21 LIT \'0x00000000 LIT \'0x00000004 -D BRANCH \'0x000001B8 ' 0BRANCH OVER2 =D 0BRANCH \'0x00000060 DROP2 LITSTRING \'0x0000000A \"0BRANCH ( " LIT \'0x00000000 LIT \'0x00000004 +D DUP2 D@ SWAP . SPACE . LITSTRING \'0x00000002 \") " BRANCH \'0x00000144 ' BRANCH OVER2 =D 0BRANCH \'0x0000005F DROP2 LITSTRING \'0x00000009 \"BRANCH ( " LIT \'0x00000000 LIT \'0x00000004 +D DUP2 D@ SWAP . SPACE . LITSTRING \'0x00000002 \") " BRANCH \'0x000000D1 ' ' OVER2 =D 0BRANCH \'0x00000048 DROP2 LIT \'0x00000027 EMIT SPACE LIT \'0x00000000 LIT \'0x00000004 +D DUP2 D@ CFA> ID. SPACE BRANCH \'0x00000075 ' ;
: :NONAME LIT \'0x00000000 LIT \'0x00000000 CREATE HERE D@ DOCOL , ] ;
: ['] IMMEDIATE ' LIT , ;
: EXCEPTION-MARKER RDROP LIT \'0x00000000 ;
: CATCH S? 4+ >R ' EXCEPTION-MARKER 4+ >R EXECUTE ;
: THROW ?DUP 0BRANCH \'0x000000EE R? DUP R0 4- < 0BRANCH \'0x00000060 DUP @ ' EXCEPTION-MARKER 4+ = 0BRANCH \'0x00000034 4+ R! DUP DUP DUP R> 4- SWAP OVER ! S! ;
: ABORT LIT \'0x00000000 1- THROW ;
: PRINT-STACK-TRACE R? DUP R0 4- < 0BRANCH \'0x000000B6 DUP @ ' EXCEPTION-MARKER 4+ OVER = 0BRANCH \'0x00000046 DROP LITSTRING \'0x0000000C \"CATCH ( DSP=" 4+ DUP @ U. LITSTRING \'0x00000002 \") " BRANCH \'0x00000044 DUP CFA> ?DUP 0BRANCH \'0x0000002C DUP2 ID. LIT \'0x0000002B EMIT SWAP >DFA 4+ - . DROP 4+ BRANCH \'0xFFFFFF3A DROP CR ;
: Z" IMMEDIATE STATE C@ 0BRANCH \'0x000000C0 ' LITSTRING , HERE D@ LIT \'0x00000000 , KEY DUP '"' <> 0BRANCH \'0x00000028 HERE D@ C! LIT \'0x00000001 HERE +! BRANCH \'0xFFFFFFC8 LIT \'0x00000000 HERE D@ C! LIT \'0x00000001 HERE +! DROP DUP HERE D@ SWAP - 4- SWAP ! ALIGN ' DROP , BRANCH \'0x00000054 HERE D@ KEY DUP '"' <> 0BRANCH \'0x00000018 OVER C! 1+ BRANCH \'0xFFFFFFD8 DROP LIT \'0x00000000 SWAP C! HERE D@ ;
: STRLEN DUP DUP C@ 0<> 0BRANCH \'0x00000010 1+ BRANCH \'0xFFFFFFE4 SWAP - ;
: CSTRING SWAP OVER HERE D@ SWAP CMOVE HERE D@ + LIT \'0x00000000 SWAP C! HERE D@ ;
