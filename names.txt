PORTB           	const_PORTB
PINB            	const_PINB
DDRB            	const_DDRB
PORTC           	const_PORTC
PINC            	const_PINC
DDRC            	const_DDRC
PORTD           	const_PORTD
PIND            	const_PIND
DDRD            	const_DDRD
PORTA           	const_PORTA
PINA            	const_PINA
DDRA            	const_DDRA
PORTE           	const_PORTE
PINE            	const_PINE
DDRE            	const_DDRE
PORTF           	const_PORTF
PINF            	const_PINF
DDRF            	const_DDRF
PORTG           	const_PORTG
PING            	const_PING
DDRG            	const_DDRG
PORTH           	const_PORTH
PINH            	const_PINH
DDRH            	const_DDRH
PORTJ           	const_PORTJ
PINJ            	const_PINJ
DDRJ            	const_DDRJ
PORTK           	const_PORTK
PINK            	const_PINK
DDRK            	const_DDRK
PORTL           	const_PORTL
PINL            	const_PINL
DDRL            	const_DDRL
HERE            	var_HERE
LAST            	var_LAST
STATE           	var_STATE
BASE            	var_BASE
DOCOL           	const_DOCOL
RAM             	const_RAM
RAM_END         	const_RAM_END
S0              	const_S0
S_END           	const_S_END
R0              	const_R0
R_END           	const_R_END
F_IMMEDIATE     	const_F_IMMEDIATE
F_HIDDEN        	const_F_HIDDEN
LIT             	w_lit
LIT2            	w_lit2
!               	w_Store
!C              	w_StoreChar
!D              	w_StoreDouble
C!              	w_CharStore
D!              	w_DoubleStore
@               	w_At
C@              	w_CharAt
D@              	w_DoubleAt
>R              	w_ToR
D>R             	w_DoubleToR
R>              	w_FromR
R>D             	w_DoubleFromR
@R              	w_CellAtR
D@R             	w_DoubleAtR
S?              	w_StackAddress
S!              	w_SetStack
R?              	w_RStackAddress
R!              	w_SetRStack
DUP             	w_dup
DROP            	w_drop
RDROP           	w_rdrop
SWAP            	w_swap
XOR             	w_xor
OR              	w_or
AND             	w_and
||              	w_Lor
&&              	w_Land
+               	w_plus
-               	w_minus
*               	w_times
/               	w_div
/2              	w_div2
/4              	w_div4
+21             	w_plus21
-21             	w_minus21
*21             	w_times21
/21             	w_div21
DUP2            	w_dup_D
DUP3            	w_dup_3
DUP4            	w_dup_4
DROP2           	w_drop_D
SWAP2           	w_swap_D
SWAP12          	w_swap_12
SWAP21          	w_swap_21
+D              	w_plus_D
-D              	w_minus_D
*D              	w_times_D
/D              	w_div_D
/2D             	w_div2_D
/4D             	w_div4_D
c2C             	w_c2C
D4C             	w_D4C
2Cc             	w_2Cc
4CD             	w_4CD
1-              	w_1minus
4-              	w_4minus
1D-             	w_1Dminus
4D-             	w_4Dminus
1+              	w_1plus
4+              	w_4plus
1D+             	w_1Dplus
4D+             	w_4Dplus
EXIT            	w_exit
RETURN          	w_return
KEY             	w_key
EMIT            	w_emit
WORD            	w_word
,               	w_comma
NUMBER          	w_number
.               	w_dot
BRANCH          	w_branch
0BRANCH         	w_0branch
INTERPRET       	w_interpret
WORDS           	w_words
DOUBLE          	w_double
TROUBLE         	w_trouble
DEBUG           	w_debug
TEST            	w_test
dump            	w_dump
nodebug         	w_nodebug
noinfo          	w_noinfo
notrace         	w_notrace
hex             	w_hex
dec             	w_dec
bin             	w_bin
cw2h            	w_cw2h
h2cw            	w_h2cw
>CFA            	w_ToCFA
h2da            	w_h2da
>DFA            	w_ToDFA
show            	w_show
export          	w_export
export_all      	w_export_all
.s              	w_stack
ff              	const_ff
aa              	const_aa
CREATE          	w_create
[               	w_left_brac
]               	w_right_brac
FIND            	w_find
HIDDEN          	w_hidden
'               	w_tick
IMMEDIATE       	w_immediate
0=              	w_zero
0<>             	w_notzero
0>              	w_positive
0>=             	w_positive0
0<              	w_negative
0<=             	w_negative0
<>              	w_notequal
<>D             	w_notequalD
=               	w_equal
=D              	w_equalD
>               	w_greater
>=              	w_greaterequal
<               	w_less
<=              	w_lessequal
>D              	w_greaterD
>=D             	w_greaterequalD
<D              	w_lessD
<=D             	w_lessequalD
NOTNULL         	w_notnull
ISNULL          	w_isnull
/MOD            	w_DIVMOD
CHAR            	w_CHAR
OVER            	w_OVER
OVER2           	w_OVER2
OVER12          	w_OVER12
OVER21          	w_OVER21
ROT             	w_ROT
-ROT            	w_NROT
ROT4            	w_ROT4
-ROT4           	w_NROT4
?DUP            	w_QDUP
?DUP2           	w_QDUPD
INVERT          	w_INVERT
+!              	w_ADDSTORE
-!              	w_SUBSTORE
+!D             	w_ADDSTORED
-!D             	w_SUBSTORED
CMOVE           	w_CMOVE
LITSTRING       	w_LITSTRING
TELL            	w_TELL
EXECUTE         	w_EXECUTE
QUIT            	w_quit
HIDE            	w_HIDE
:               	w_colon
;               	w_semicol
IF              	w_IF
FI              	w_FI
THEN            	w_THEN
ELSE            	w_ELSE
BEGIN           	w_BEGIN
UNTIL           	w_UNTIL
WHILE           	w_WHILE
REPEAT          	w_REPEAT
FORGET          	w_FORGET
ascii           	w_ascii
''              	w_doubletick
