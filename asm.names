!               	w_Store
!C              	w_StoreChar
!D              	w_StoreDouble
&&              	w_Land
'               	w_tick
*               	w_times
*21             	w_times21
*D              	w_times_D
+               	w_plus
+!              	w_ADDSTORE
+!D             	w_ADDSTORED
+21             	w_plus21
+D              	w_plus_D
,               	w_comma
-               	w_minus
-!              	w_SUBSTORE
-!D             	w_SUBSTORED
-21             	w_minus21
-D              	w_minus_D
-ROT            	w_NROT
-ROT4           	w_NROT4
.               	w_dot
.s              	w_stack
/               	w_div
/2              	w_div2
/21             	w_div21
/2D             	w_div2_D
/4              	w_div4
/4D             	w_div4_D
/D              	w_div_D
/MOD            	w_DIVMOD
0<              	w_negative
0<=             	w_negative0
0<>             	w_notzero
0=              	w_zero
0>              	w_positive
0>=             	w_positive0
0BRANCH         	w_0branch
1+              	w_1plus
1-              	w_1minus
1D+             	w_1Dplus
1D-             	w_1Dminus
2Cc             	w_2Cc
4+              	w_4plus
4-              	w_4minus
4CD             	w_4CD
4D+             	w_4Dplus
4D-             	w_4Dminus
:               	w_colon
;               	w_semicol
<               	w_less
<=              	w_lessequal
<=D             	w_lessequalD
<>              	w_notequal
<>D             	w_notequalD
<D              	w_lessD
=               	w_equal
=D              	w_equalD
>               	w_greater
>=              	w_greaterequal
>=D             	w_greaterequalD
>CFA            	w_ToCFA
>D              	w_greaterD
>DFA            	w_ToDFA
>R              	w_ToR
?DUP            	w_QDUP
?DUP2           	w_QDUPD
@               	w_At
@R              	w_CellAtR
AND             	w_and
BASE            	var_BASE
BIOS_COLS       	const_BIOS_COLS
BIOS_ROWS       	const_BIOS_ROWS
BRANCH          	w_branch
C!              	w_CharStore
C@              	w_CharAt
CHAR            	w_CHAR
CLS             	w_CLS
CMOVE           	w_CMOVE
CRAM            	const_CRAM
CREATE          	w_create
CUR_yx          	w_CUR_yx
D!              	w_DoubleStore
D4C             	w_D4C
D>R             	w_DoubleToR
D@              	w_DoubleAt
D@R             	w_DoubleAtR
DDRA            	const_DDRA
DDRB            	const_DDRB
DDRC            	const_DDRC
DDRD            	const_DDRD
DDRE            	const_DDRE
DDRF            	const_DDRF
DDRG            	const_DDRG
DDRH            	const_DDRH
DDRJ            	const_DDRJ
DDRK            	const_DDRK
DDRL            	const_DDRL
DEBUG           	w_debug
DOCOL           	const_DOCOL
DOUBLE          	w_double
DROP            	w_drop
DROP2           	w_drop_D
DUP             	w_dup
DUP2            	w_dup_D
DUP3            	w_dup_3
DUP4            	w_dup_4
EMIT            	w_emit
EXECUTE         	w_EXECUTE
EXIT            	w_exit
FIND            	w_find
F_HIDDEN        	const_F_HIDDEN
F_IMMEDIATE     	const_F_IMMEDIATE
HERE            	var_HERE
HIDDEN          	w_hidden
IMMEDIATE       	w_immediate
INTERPRET       	w_interpret
INVERT          	w_INVERT
ISNULL          	w_isnull
KEY             	w_key
KEYpress        	w_KEYpress
LAST            	var_LAST
LIT             	w_lit
LIT2            	w_lit2
LITSTRING       	w_LITSTRING
NOTNULL         	w_notnull
NUMBER          	w_number
OR              	w_or
OVER            	w_OVER
OVER12          	w_OVER12
OVER2           	w_OVER2
OVER21          	w_OVER21
PINA            	const_PINA
PINB            	const_PINB
PINC            	const_PINC
PIND            	const_PIND
PINE            	const_PINE
PINF            	const_PINF
PING            	const_PING
PINH            	const_PINH
PINJ            	const_PINJ
PINK            	const_PINK
PINL            	const_PINL
PORTA           	const_PORTA
PORTB           	const_PORTB
PORTC           	const_PORTC
PORTD           	const_PORTD
PORTE           	const_PORTE
PORTF           	const_PORTF
PORTG           	const_PORTG
PORTH           	const_PORTH
PORTJ           	const_PORTJ
PORTK           	const_PORTK
PORTL           	const_PORTL
QUIT            	w_quit
R!              	w_SetRStack
R0              	const_R0
R>              	w_FromR
R>D             	w_DoubleFromR
R?              	w_RStackAddress
RAM             	const_RAM
RAM_END         	const_RAM_END
RDROP           	w_rdrop
RETURN          	w_return
ROT             	w_ROT
ROT4            	w_ROT4
R_END           	const_R_END
S!              	w_SetStack
S0              	const_S0
S?              	w_StackAddress
STATE           	var_STATE
SWAP            	w_swap
SWAP12          	w_swap_12
SWAP2           	w_swap_D
SWAP21          	w_swap_21
S_END           	const_S_END
TELL            	w_TELL
TEST            	w_test
TROUBLE         	w_trouble
VRAM            	const_VRAM
VRAM_yx         	w_VRAM_yx
WAIT            	w_WAIT
WORD            	w_word
WORDS           	w_words
XOR             	w_xor
[               	w_left_brac
]               	w_right_brac
aa              	const_aa
bin             	w_bin
c2C             	w_c2C
cw2h            	w_cw2h
dec             	w_dec
dump            	w_dump
export          	w_export
export_all      	w_export_all
ff              	const_ff
firtsbuildinword	w_firtsbuildinword
getword         	w_getword
h2cw            	w_h2cw
h2da            	w_h2da
hex             	w_hex
lastbuildinword 	w_lastbuildinword
memdump         	w_memdump
nodebug         	w_nodebug
noinfo          	w_noinfo
notrace         	w_notrace
show            	w_show
traceback       	w_traceback
||              	w_Lor
